<!-- views/layouts/main.handlebars -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="User Authentication">
    <meta name="author" content="">
    <meta charset="UTF-8"> <!--this is needed for FACEBOOK LOGIN -->

    <link type="text/css" rel="stylesheet" href="/styles/style.css" xmlns="http://www.w3.org/1999/html"/>
    <link rel="import" href="/bower_components/polymer/polymer.html"/>
    <link rel="import" href="/bower_components/app-router/app-router.html"/>
    <link rel="import" href="/bower_components/paper-button/paper-button.html"/>
    <link rel="import" href="/bower_components/paper-ripple/paper-ripple.html">
    <link rel="import" href="/bower_components/paper-checkbox/paper-checkbox.html"/>
    <link rel="import" href="/bower_components/paper-input/paper-input.html"/>
    <link rel="import" href="/bower_components/paper-input/paper-input-decorator.html"/>
    <link rel="import" href="/pages/elements/login-form.html"/>
    <link rel="import" href="/pages/elements/top-bar.html"/>

    <title>Navigatio</title>

    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">

    <link rel="stylesheet" href="/styles/style.css">

</head>

<style>

</style>

<body>
<top-bar></top-bar>
<!-- This loads the facebook root information onload it allows me to initiate the login flow! -->
<div id="fb-root"></div>
<script>
(function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=295897893929835&version=v2.0";
    fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));
</script>


<!--<div-->
        <!--class="fb-like"-->
        <!--data-share="true"-->
        <!--data-width="450"-->
        <!--data-show-faces="true">-->
<!--</div>-->

<div class="container" center-center>

        <!-- Collect the nav links, forms, and other content for toggling -->
          <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav">
          <li>
            {{#if user}}
                <p class="navbar-text">
                    <strong>Hi,</strong>
                    <img src="{{user.avatar}}" width="20" height="20">
                  {{user.username}}
                </p>
            </li>
            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li>
                    <a href="/logout">Log Out</a>
                </li>
            {{else}}
                <a href="/signin">Sign In</a>
                </li>
            {{/if}}
          </ul>
          </div><!-- /.navbar-collapse -->
      <!--</div><!-- /.container-fluid -->-->
  <!--</nav>-->

  {{#if error}}
      <p class="alert alert-warning">{{error}}</p>
  {{/if}}

  {{#if success}}
      <p class="alert alert-success">{{success}}</p>
  {{/if}}

  {{#if notice}}
      <p class="alert alert-info">{{notice}}</p>
  {{/if}}

    <!--where our other templates will insert-->
  {{{body}}}

</div> <!-- /container -->

<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="/socket.io/socket.io.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

<!-- Latest compiled and minified JavaScript -->
<!--<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>-->


<script>

    //======================= CHANGES COLOR OF PAPER INPUTS EMAIL/PASSWORD =========================///
    var paperInput = CoreStyle.g.
            paperInput = CoreStyle.g.paperInput || {};

    paperInput.labelColor = '#ffa07a';
    paperInput.cursorColor = '#A7FFEB';
    paperInput.focusedColor = '#A7FFEB';
    paperInput.invalidColor = '#ffa07a';

    //======================== FB LOGIN INFORMATION ==============================================//

    var socket =io();
        console.log('connection');


    (function(d, debug){
        var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement('script'); js.id = id; js.async = true;
        js.src = "//connect.facebook.net/en_US/all" + (debug ? "/debug" : "") + ".js";
        ref.parentNode.insertBefore(js, ref);
    }(document, /*debug*/ false));

    function shareOnFb(action, msg){
        FB.ui({
            method: action,
            message: msg
        });
    }

    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
            // Logged into your app and Facebook.
            testAPI();
        } else if (response.status === 'not_authorized') {
            // The person is logged into Facebook, but not your app.
            document.getElementById('status').innerHTML = 'Please log ' +
            'into this app.';
        } else {
            // The person is not logged into Facebook, so we're not sure if
            // they are logged into this app or not.
            document.getElementById('status').innerHTML = 'Please log ' +
            'into Facebook.';
        }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
        FB.getLoginStatus(function(response) {
            statusChangeCallback(response);
        });
    }

    function checkFBLogin() {
        FB.login(function(response){
            console.log(response);
            if (response.status === 'connected') {
                console.log("the token is: " + response.authResponse.accessToken);
                // Logged into your app and Facebook.

            } else if (response.status === 'not_authorized') {
                // The person is logged into Facebook, but not your app.
            } else {
                // The person is not logged into Facebook, so we're not sure if
                // they are logged into this app or not.
            }
            FB.getLoginStatus(function(response) {
                statusChangeCallback(response);
            });

       },
            {
                scope: 'public_profile, email, user_friends'
            });

    }

    window.fbAsyncInit = function() {
        FB.init({
            appId      : '295897893929835',
            cookie     : true,  // enable cookies to allow the server to access
                                // the session
            xfbml      : true,  // parse social plugins on this page
            version    : 'v2.1' // use version 2.1
        });

//        Now that we've initialized the JavaScript SDK, we call
//        FB.getLoginStatus().  This function gets the state of the
//        person visiting this page and can return one of three states to
//        the callback you provide.  They can be:
//
//        1. Logged into your app ('connected')
//        2. Logged into Facebook, but not your app ('not_authorized')
//        3. Not logged into Facebook and can't tell if they are logged into
//            your app or not.
//
//        These three cases are handled in the callback function.


        FB.getLoginStatus(function(response) {
            if (response.status === 'connected'){
                //we want to console the token so that we can send this string to the server
                //the token is a specific id for the user, and gets passed to each of the apis
                //it proves that a specific person is using a specific app
                //we send it to the server so the server can access that users information when needed
                console.log("the token is: " + response.authResponse.accessToken);
            }
            statusChangeCallback(response);
        });

//
//        FB.login(function(response){
//            console.log(response);
////            if (response.status === 'connected') {
////                // Logged into your app and Facebook.
////
////            } else if (response.status === 'not_authorized') {
////                // The person is logged into Facebook, but not your app.
////            } else {
////                // The person is not logged into Facebook, so we're not sure if
////                // they are logged into this app or not.
////            }
//
//       }, {scope: 'public_profile,email,user_friends'});

    };

    // Load the SDK asynchronously
    (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));


    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    function testAPI() {
        console.log('Welcome!  Fetching your information.... ');

        FB.api('/me', function(response) {

            console.log('Successful login for: ' + response.name);
            document.getElementById('status').innerHTML =
                    'Thanks for logging in, ' + response.name + '!';
            console.log(response);


            console.log(JSON.stringify(response));
            console.log(response);


        var userName = response.first_name;
        socket.emit('userName', userName);

        var last_name = response.last_name;
        socket.emit('last_name', last_name);

        var email = response.email;
        socket.emit('email', email);

        var gender = response.gender;
        socket.emit('gender', gender);

        var photo = response.avatar;
        socket.emit('photo', photo);

        var newUser = function (userName, photo, last_name, email, gender) {
            console.log(userName + " " + last_name + " " + email + " " + gender + " " + "is now added");
            socket.emit('newUser', userName, photo, last_name, email, gender);
        };
            newUser(userName, photo, last_name, email, gender);
    });

        FB.api('/me/permissions', function(response) {
            console.log(JSON.stringify(response));
        });
        FB.logout(function(response) {
            // Person is now logged out
        });
}



</script>




</body>
</html>